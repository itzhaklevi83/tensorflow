"""
create anti-virus and test it
create and control the anti-virus """
import optiview
import os
import gl_var


class AntiVirus:
    """ analyze process, """
    path_level = 2  # full path length

    def __init__(self, root_path=os.path.expanduser('~')):
        self._tree = []
        self._tree.append((True, root_path, root_path))
        self._newly_added = []
        self._recent_scanned = []

    def _prepare(self):
        """try to create list of all files path.
        to prepare the path
        don't proceed more event if one fail"""
        while self._tree:
            veracity, full_found_path, previous_path = self._tree.pop()
            if not veracity:
                continue
            for file_name in os.listdir(full_found_path):
                file_path = os.path.join(full_found_path, file_name)
                self._tree.append(
                    (
                        os.path.isdir(file_path),
                        file_path,
                        previous_path
                    )
                )

    def _lookup_malware(self, walking_element=None):
        """
        look for malware inside a file or folder,
        """
        if not walking_element or file_path in self._recent_scanned:
            return
        gl_var.logger.debug(
            'looking in %s',
            walking_element
        )
        self._recent_scanned.append(walking_element)
        fata = open(walking_element)
        fata.next()  # igonre first line
        for line in fata.readlines():
            if 'Windows.MediaRecorder' in line:
                gl_var.logger.info(
                    'INfection Found in file %s',
                    walking_element
                )
                optiview.print_infected(walking_element)
                if gl_var.options.act == gl_var.options.Actions.QUIT:
                    raise KeyboardInterrupt()
            if gl_var.options.act == gl_var.options.Actions.QUIT:
                raise KeyboardInterrupt()

    def _scan(self):
        while self._newly_added:
            self._lookup_malware(self._newly_added.pop())

    def scan(self):
        self._prepare()
        for element in self._tree:
            if element[0]:
                if not self._lookup_malware(element[2]):
                    self._newly_added.append(element[2])
        self._scan()
        gl_var.logger.debug(
            'newly added : %s\n'
            'recently scanned : %s',
            self._newly_added, self._recent_scanned
        )
        # pass to virus definition

    def definition(self, definition_path=None):
        pass

    def indefinition(self, definition_path=None):
        pass


if __name__ == "__main__":
    av = AntiVirus()
    av.scan()
